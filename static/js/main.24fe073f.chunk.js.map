{"version":3,"sources":["components/Buttons/Buttons.module.scss","components/Statistics/Statistics.jsx","components/Buttons/Buttons.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Sections.jsx","App.js","index.js","components/Statistics/Statistics.module.scss","components/Section/Sections.module.scss"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","s","statTitle","stats","Buttons","btnName","onLeaveFeedback","button","onClick","type","FeedbackOptions","options","map","btn","prototype","PropTypes","array","isRequired","func","Sections","title","children","section","mainTitle","App","state","onBtnClick","setState","Object","values","this","reduce","acc","Math","round","countTotalFeedback","keys","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kHACAA,EAAOC,QAAU,CAAC,OAAS,0B,4JC8BZC,EA3BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OACI,gCACI,oBAAIC,UAAWC,IAAEC,UAAjB,wBACCJ,EACG,sBAAKE,UAAWC,IAAEE,MAAlB,UACI,uCAAUR,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,qDAAwBC,EAAxB,UAGJ,sD,iCCGDK,EAhBC,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACxB,OACI,wBACIN,UAAWC,IAAEM,OACbC,QAAS,kBAAMF,EAAgBD,IAC/BI,KAAK,SAHT,SAKKJ,KCPPK,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASL,EAAsB,EAAtBA,gBAChC,OACI,8BACKK,EAAQC,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,CAEIR,QAASQ,EACTP,gBAAiBA,GAFZO,SASzBH,EAAgBI,UAAY,CACxBH,QAASI,IAAUC,MAAMC,WACzBX,gBAAiBS,IAAUG,KAAKD,YAGrBP,Q,gBCNAS,EAbE,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACvB,OACI,sBAAKrB,UAAWC,IAAEqB,QAAlB,UACI,oBAAItB,UAAWC,IAAEsB,UAAjB,SAA6BH,IAC5BC,MCJQG,E,4MACjBC,MAAQ,CACJ9B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAcT6B,WAAa,SAAAb,GACT,EAAKc,SAAL,eAAiBd,EAAM,EAAKY,MAAMZ,GAAO,K,wDAZ7C,WACI,OAAOe,OAAOC,OAAOC,KAAKL,OAAOM,QAAO,SAACC,EAAK7B,GAE1C,OADA6B,GAAO7B,IAER,K,6CAGP,WACI,OAAO8B,KAAKC,MAAOJ,KAAKL,MAAM9B,KAAOmC,KAAKK,qBAAwB,O,oBAOtE,WACI,OACI,eAAC,EAAD,CAAUf,MAAM,wBAAhB,UACI,cAAC,EAAD,CACIT,QAASiB,OAAOQ,KAAKN,KAAKL,OAC1BnB,gBAAiBwB,KAAKJ,aAE1B,cAAC,EAAD,CACI/B,KAAMmC,KAAKL,MAAM9B,KACjBC,QAASkC,KAAKL,MAAM7B,QACpBC,IAAKiC,KAAKL,MAAM5B,IAChBC,MAAOgC,KAAKK,qBACZpC,mBAAoB+B,KAAKO,2C,GAlCZC,a,MCCjCC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,U,kBCR5BnD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,MAAQ,4B,kBCApED,EAAOC,QAAU,CAAC,QAAU,6B","file":"static/js/main.24fe073f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Buttons_button__1KQQ1\"};","import React from 'react';\r\nimport s from './Statistics.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return (\r\n        <div>\r\n            <h2 className={s.statTitle}>Statistics</h2>\r\n            {total ? (\r\n                <div className={s.stats}>\r\n                    <p>Good: {good}</p>\r\n                    <p>Neutral: {neutral}</p>\r\n                    <p>Bad: {bad}</p>\r\n                    <p>Total: {total}</p>\r\n                    <p>Positive feedbacks: {positivePercentage}%</p>\r\n                </div>\r\n            ) : (\r\n                <p>No feedback given</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Buttons.module.scss';\r\n\r\nconst Buttons = ({ btnName, onLeaveFeedback }) => {\r\n    return (\r\n        <button\r\n            className={s.button}\r\n            onClick={() => onLeaveFeedback(btnName)}\r\n            type=\"button\"\r\n        >\r\n            {btnName}\r\n        </button>\r\n    );\r\n};\r\n\r\nButtons.propTypes = {\r\n    nameBtn: PropTypes.string.isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default Buttons;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Buttons from '../Buttons/Buttons';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    return (\r\n        <div>\r\n            {options.map(btn => (\r\n                <Buttons\r\n                    key={btn}\r\n                    btnName={btn}\r\n                    onLeaveFeedback={onLeaveFeedback}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nFeedbackOptions.prototype = {\r\n    options: PropTypes.array.isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Sections.module.scss';\r\n\r\nconst Sections = ({ title, children }) => {\r\n    return (\r\n        <div className={s.section}>\r\n            <h1 className={s.mainTitle}>{title}</h1>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nSections.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Sections;\r\n","import React, { Component } from 'react';\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Sections from './components/Section/Sections';\nexport default class App extends Component {\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n    };\n\n    countTotalFeedback() {\n        return Object.values(this.state).reduce((acc, stats) => {\n            acc += stats;\n            return acc;\n        }, 0);\n    }\n\n    countPositiveFeedbackPercentage() {\n        return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n    }\n\n    onBtnClick = btn => {\n        this.setState({ [btn]: this.state[btn] + 1 });\n    };\n\n    render() {\n        return (\n            <Sections title=\"Please leave feedback\">\n                <FeedbackOptions\n                    options={Object.keys(this.state)}\n                    onLeaveFeedback={this.onBtnClick}\n                />\n                <Statistics\n                    good={this.state.good}\n                    neutral={this.state.neutral}\n                    bad={this.state.bad}\n                    total={this.countTotalFeedback()}\n                    positivePercentage={this.countPositiveFeedbackPercentage()}\n                />\n            </Sections>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statTitle\":\"Statistics_statTitle__2IYDW\",\"stats\":\"Statistics_stats__1kmPP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Sections_section__1jiyV\"};"],"sourceRoot":""}